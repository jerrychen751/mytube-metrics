@startuml diagram

'=== Core Domain Models ===
class User {
    + user_id: String
    + name: String
    + email: String
    + access_token: String
    + refresh_token: String
    + token_expiry: DateTime
}

class Video {
    + video_id: String
    + title: String
    + channel_id: String
    + publication_date: DateTime
    + category_id: String
    + duration_seconds: Integer
}

class Channel {
    + channel_id: String
    + channel_title: String
}

class PlaylistItem {
    + video_id: String
    + watched_at: DateTime
}

'=== Service & Processing Components ===
class OAuthClient {
    + client_id: String
    + client_secret: String
    + redirect_uri: String
    + scopes: List\<String\>
    + authorize()
    + exchangeCodeForToken(code: String)
    + refreshToken()
}

class YouTubeAPIClient {
    + fetchPlaylistItems(playlistId: String, pageToken: String): List\<PlaylistItem\>
    + fetchVideoMetadata(videoIds: List\<String\>): List\<Video\>
}

class DataProcessor {
    + normalizeDuration(isoDuration: String): Integer
    + mapCategory(categoryId: String): String
    + aggregateByCategory(startDate: Date, endDate: Date): Map\<String,Integer\>
    + aggregateByChannel(limit: Integer): List\<String,Integer\>
    + aggregateTrend(interval: String, startDate: Date, endDate: Date): List\<Date,Integer\>
}

class Database {
    + connect()
    + saveUser(u: User)
    + saveChannel(c: Channel)
    + saveVideo(v: Video)
    + savePlaylistItem(pi: PlaylistItem)
    + queryCategoryStats(startDate: Date, endDate: Date)
    + queryChannelStats(limit: Integer)
    + queryWatchTrends(interval: String, startDate: Date, endDate: Date)
}

class Dashboard {
    + displayCategoryChart(data)
    + displayChannelChart(data)
    + displayTrendChart(data)
}

'=== Relationships ===
User --> OAuthClient : authenticates via
OAuthClient --> YouTubeAPIClient : provides access_token
YouTubeAPIClient --> PlaylistItem : retrieves watched entries
YouTubeAPIClient --> Video : retrieves metadata
YouTubeAPIClient --> Channel : retrieves channel info

PlaylistItem --> DataProcessor : input for
Video --> DataProcessor : input for
Channel --> DataProcessor : input for

DataProcessor --> Database : stores & queries
Database --> Dashboard : serves data to
Dashboard --> User : renders insights for

@enduml